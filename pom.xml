<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>info.magnolia.forge</groupId>
  <artifactId>periscope-ai-result-ranker</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Periscope AI Result Ranker Magnolia Module</name>

  <properties>
    <magnoliaBundleVersion>6.2.18</magnoliaBundleVersion>
    <periscopeVersion>1.2.4</periscopeVersion>
    <dl4jVersion>1.0.0-beta7</dl4jVersion>
    <openBlasVersion>0.3.9-1.5.3</openBlasVersion>
    <mklVersion>2020.1-1.5.3</mklVersion>
    <junit4.version>4.13.2</junit4.version>
    <mockitoCoreVersion>1.10.19</mockitoCoreVersion>
    <hamcrestVersion>2.1</hamcrestVersion>
    <powermockVersion>1.7.4</powermockVersion>
    <javaVersion>1.8</javaVersion>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>info.magnolia.periscope</groupId>
        <artifactId>magnolia-periscope-core</artifactId>
        <version>${periscopeVersion}</version>
      </dependency>
      <dependency>
        <groupId>info.magnolia.periscope</groupId>
        <artifactId>magnolia-periscope-api</artifactId>
        <version>${periscopeVersion}</version>
      </dependency>

      <!--AI/ML-->
      <dependency>
        <groupId>org.deeplearning4j</groupId>
        <artifactId>deeplearning4j-core</artifactId>
        <version>${dl4jVersion}</version>
        <exclusions>
          <exclusion>
            <groupId>org.datavec</groupId>
            <artifactId>datavec-data-image</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.deeplearning4j</groupId>
            <artifactId>deeplearning4j-modelimport</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.deeplearning4j</groupId>
        <artifactId>deeplearning4j-nn</artifactId>
        <version>${dl4jVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.datavec</groupId>
        <artifactId>datavec-data-image</artifactId>
        <version>${dl4jVersion}</version>
        <exclusions>
          <exclusion>
            <groupId>org.bytedeco</groupId>
            <artifactId>opencv-platform</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.bytedeco</groupId>
            <artifactId>leptonica-platform</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.bytedeco</groupId>
            <artifactId>hdf5-platform</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.google.android</groupId>
            <artifactId>android</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!--Those dependencies are required by dl4j but we want to select which dependency we bring specifically-->
      <!--Alternatively we could use nd4j-native-platform to fetch those for all environments which we don't need-->
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-api</artifactId>
        <version>${dl4jVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-native</artifactId>
        <version>${dl4jVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-native</artifactId>
        <version>${dl4jVersion}</version>
        <classifier>linux-x86_64-avx2</classifier>
      </dependency>
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-native</artifactId>
        <version>${dl4jVersion}</version>
        <classifier>macosx-x86_64-avx2</classifier>
      </dependency>
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-native</artifactId>
        <version>${dl4jVersion}</version>
        <classifier>windows-x86_64-avx2</classifier>
      </dependency>
      <dependency>
        <groupId>org.nd4j</groupId>
        <artifactId>nd4j-native</artifactId>
        <version>${dl4jVersion}</version>
        <classifier>linux-ppc64le-avx2</classifier>
      </dependency>

      <!--OPENBLAS-->
      <!--Those dependencies are required by nd4j but we want to select which dependency we bring specifically-->
      <!--Alternatively we could use openblas-platform to fetch those for all environments which we don't need-->
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>openblas</artifactId>
        <version>${openBlasVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>openblas</artifactId>
        <version>${openBlasVersion}</version>
        <classifier>linux-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>openblas</artifactId>
        <version>${openBlasVersion}</version>
        <classifier>macosx-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>openblas</artifactId>
        <version>${openBlasVersion}</version>
        <classifier>windows-x86_64</classifier>
      </dependency>

      <!--MKL-->
      <!--Those dependencies are required by nd4j but we want to select which dependency we bring specifically-->
      <!--Alternatively we could use mkl-platform to fetch those for all environments which we don't need-->
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>mkl</artifactId>
        <version>${mklVersion}</version>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>mkl</artifactId>
        <version>${mklVersion}</version>
        <classifier>linux-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>mkl</artifactId>
        <version>${mklVersion}</version>
        <classifier>macosx-x86_64</classifier>
      </dependency>
      <dependency>
        <groupId>org.bytedeco</groupId>
        <artifactId>mkl</artifactId>
        <version>${mklVersion}</version>
        <classifier>windows-x86_64</classifier>
      </dependency>

      <dependency>
        <groupId>info.magnolia</groupId>
        <artifactId>magnolia-core</artifactId>
        <version>${magnoliaBundleVersion}</version>
        <type>test-jar</type>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit4.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockitoCoreVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrestVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrestVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrestVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermockVersion}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermockVersion}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>info.magnolia.bundle</groupId>
        <artifactId>magnolia-bundle-parent</artifactId>
        <version>${magnoliaBundleVersion}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>info.magnolia</groupId>
      <artifactId>magnolia-core</artifactId>
    </dependency>

    <dependency>
      <groupId>info.magnolia.core</groupId>
      <artifactId>magnolia-configuration</artifactId>
    </dependency>

    <!--Periscope API-->
    <dependency>
      <groupId>info.magnolia.periscope</groupId>
      <artifactId>magnolia-periscope-core</artifactId>
    </dependency>
    <dependency>
      <groupId>info.magnolia.periscope</groupId>
      <artifactId>magnolia-periscope-api</artifactId>
    </dependency>

    <!--AI/ML-->
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-core</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.datavec</groupId>
          <artifactId>datavec-data-image</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.deeplearning4j</groupId>
          <artifactId>deeplearning4j-modelimport</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.deeplearning4j</groupId>
      <artifactId>deeplearning4j-nn</artifactId>
    </dependency>

    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-native</artifactId>
    </dependency>
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-native</artifactId>
      <classifier>linux-x86_64-avx2</classifier>
    </dependency>
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-native</artifactId>
      <classifier>macosx-x86_64-avx2</classifier>
    </dependency>
    <dependency>
      <groupId>org.nd4j</groupId>
      <artifactId>nd4j-native</artifactId>
      <classifier>windows-x86_64-avx2</classifier>
    </dependency>

    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>openblas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>openblas</artifactId>
      <classifier>linux-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>openblas</artifactId>
      <classifier>macosx-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>openblas</artifactId>
      <classifier>windows-x86_64</classifier>
    </dependency>

    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>mkl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>mkl</artifactId>
      <classifier>linux-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>mkl</artifactId>
      <classifier>macosx-x86_64</classifier>
    </dependency>
    <dependency>
      <groupId>org.bytedeco</groupId>
      <artifactId>mkl</artifactId>
      <classifier>windows-x86_64</classifier>
    </dependency>

    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.jackrabbit</groupId>
      <artifactId>jackrabbit-jcr-commons</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-collections4</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jsoup</groupId>
      <artifactId>jsoup</artifactId>
    </dependency>

    <!--TESTS-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
    </dependency>
    <dependency>
      <groupId>info.magnolia</groupId>
      <artifactId>magnolia-core</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.7.0</version>
        <configuration>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
        </configuration>
      </plugin>
    </plugins>

    <!-- default resources configuration which will filter the module descriptor -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>**/*</include>
        </includes>
      </resource>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <includes>
          <include>META-INF/magnolia/*</include>
        </includes>
      </resource>
    </resources>
  </build>

  <repositories>
    <repository>
      <id>magnolia.public</id>
      <url>https://nexus.magnolia-cms.com/content/groups/public</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>https://maven.vaadin.com/vaadin-addons</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>magnolia.forge.releases</id>
      <url>https://nexus.magnolia-cms.com/content/repositories/magnolia.forge.releases</url>
    </repository>
    <snapshotRepository>
      <id>magnolia.forge.snapshots</id>
      <url>https://nexus.magnolia-cms.com/content/repositories/magnolia.forge.snapshots</url>
    </snapshotRepository>
    <site>
      <id>magnolia.forge.sites</id>
      <url>dav:https://nexus.magnolia-cms.com/content/sites/magnolia.forge.sites/${artifactId}/${project.version}</url>
    </site>
  </distributionManagement>

</project>
